from flask import Flask, request, jsonify
from flask_cors import CORS
from flask_jwt_extended import JWTManager, create_access_token, jwt_required, get_jwt_identity
from pymongo import MongoClient
import bcrypt
import datetime

app = Flask(__name__)
CORS(app)

# Configuration
app.config['JWT_SECRET_KEY'] = 'your_secret_key_here'
jwt = JWTManager(app)

# Database setup
client = MongoClient('mongodb://localhost:27017/')
db = client['networking_platform']
users_collection = db['users']
posts_collection = db['posts']
messages_collection = db['messages']
events_collection = db['events']

# User Registration
@app.route('/register', methods=['POST'])
def register():
    data = request.json
    hashed_password = bcrypt.hashpw(data['password'].encode('utf-8'), bcrypt.gensalt())
    users_collection.insert_one({
        'email': data['email'],
        'password': hashed_password,
        'name': data['name'],
        'role': data['role'],
        'created_at': datetime.datetime.utcnow()
    })
    return jsonify({'message': 'User registered successfully'}), 201

# User Login
@app.route('/login', methods=['POST'])
def login():
    data = request.json
    user = users_collection.find_one({'email': data['email']})
    if user and bcrypt.checkpw(data['password'].encode('utf-8'), user['password']):
        token = create_access_token(identity=str(user['_id']))
        return jsonify({'token': token, 'message': 'Login successful'})
    return jsonify({'message': 'Invalid credentials'}), 401

# Create Post
@app.route('/post', methods=['POST'])
@jwt_required()
def create_post():
    data = request.json
    user_id = get_jwt_identity()
    posts_collection.insert_one({'user_id': user_id, 'content': data['content'], 'timestamp': datetime.datetime.utcnow()})
    return jsonify({'message': 'Post created'}), 201

# Fetch Posts
@app.route('/posts', methods=['GET'])
def get_posts():
    posts = list(posts_collection.find({}, {'_id': 0}))
    return jsonify(posts)

# Messaging
@app.route('/message', methods=['POST'])
@jwt_required()
def send_message():
    data = request.json
    messages_collection.insert_one({'sender_id': get_jwt_identity(), 'receiver_id': data['receiver_id'], 'message': data['message'], 'timestamp': datetime.datetime.utcnow()})
    return jsonify({'message': 'Message sent'})

# Event Registration
@app.route('/event/register', methods=['POST'])
@jwt_required()
def register_event():
    data = request.json
    events_collection.insert_one({'user_id': get_jwt_identity(), 'event_name': data['event_name'], 'timestamp': datetime.datetime.utcnow()})
    return jsonify({'message': 'Registered for event'})

if __name__ == '__main__':
    app.run(debug=True)
